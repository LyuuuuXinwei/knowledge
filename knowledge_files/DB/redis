基于内存亦可持久化的日志型、Key-Value数据库
启动redis
redis-server.exe 启动redis服务（redis.windows.conf）
redis-cli.exe -h 127.0.0.1 -p 6379 打开redis客户端连接本地redis服务
redis-cli -h host -p port -a password 连接到主机为 127.0.0.1，端口为 6379 ，密码为 mypass 的 redis 服务上

Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。

string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。
序列化 (Serialization)把变量从内存中转换为可以存储或传输的形式的过程。
JSON标准规定JSON编码是UTF-8，所以我们总是能正确地在Python的str与JSON的字符串之间转换。
==========================================================================================
string（字符串）:
SET key value
GET key
MGET key1 [key2..]获取所有(一个或多个)给定 key 的值。
STRLEN key 返回 key 所储存的字符串值的长度。
……

hash（哈希:
hash是一个string类型的field和value的映射表，hash特别适合用于存储对象
HMSET key value1 value2 value3 ……例如 HMSET runoobkey name "redis tutorial" description
HGETALL user:1 获取在哈希表中指定 key 的所有字段和值 其中"：1"表示field，字段
HDEL key field2 [field2] 删除一个或多个哈希表字段
HGET key field 获取存储在哈希表中指定字段的值。
……

list（列表）:
列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。
LPUSH key value1
LPUSH key value2
LPUSH key value3 在列表左/头部添加
……
LRANGE key 0 10 #0到10位查找
BLPOP key1 [key2 ] timeout
移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止
BRPOP key1 [key2 ] timeout
移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。
LLEN key 获取列表长度
RPUSH key value1 [value2] 在列表中添加一个或多个值 右边

set（集合）:
Set是string类型的无序集合。
添加一个string元素到,key对应的set集合中，成功返回1,如果元素已经在集合中返回0,key对应的set不存在返回错误。
sadd key value1
sadd key value2
……
smembers key

zset(sorted set：有序集合):
添加元素到集合，元素在集合中存在则更新对应score
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
zadd key score value1
zadd key score value2
……
ZRANGEBYSCORE key 0 1000

Redis keys 命令:
SET key redis
DEL key
EXISTS key
RENAME key newkey
TYPE key 返回 key 所储存的值的类型
……

五种各有自己的命令
==================================================================================================

新添hyperloglog结构
HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。
1	PFADD key element [element ...]
添加指定元素到 HyperLogLog 中。
2	PFCOUNT key [key ...]
返回给定 HyperLogLog 的基数估算值。
3	PFMERGE destkey sourcekey [sourcekey ...]
将多个 HyperLogLog 合并为一个 HyperLogLog

redis订阅，消息通信模式
当有新消息通过 PUBLISH 命令发送给频道 channel1 时， 这个消息就会被发送给订阅它的三个客户端：
SUBSCRIBE redisChat创建频道
PUBLISH redisChat "msg" 发布消息

redis事务
Redis 事务可以一次执行多个命令，事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。
1 开始事务。 MULTI
2 命令入队。 不断输入命令行
3 执行事务。 EXEC 命令触发事务

Redis 脚本使用 Lua 解释器来执行脚本
EVAL "return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}" 2 key1 key2 first second