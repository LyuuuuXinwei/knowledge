HTTP是一个基于TCP/IP通信协议来传递数据,传输层-

HTTP 工作原理
客户端/服务端（C/S）的架构模型
无状态是指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。从另一方面讲，打开一个服务器上的网页和你之前打开这个服务器上的网页之间没有任何联系
HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。
HTTP协议工作于客户端-服务端架构为上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。
Web服务器有：Apache服务器，IIS服务器（Internet Information Services）Nginx等，你也可以用一些工具（比如 Node.js ）自己定制一个。
HTTP默认端口号为80，但是你也可以改为8080或者其他端口。

CGI(Common Gateway Interface),通用网关接口,它是一段程序,运行在服务器上如：HTTP服务器，提供同客户端HTML页面的接口。
CGI程序可以是Python脚本，PERL脚本，SHELL脚本，C或者C++程序等
通过CGI接口，Web服务器就能够获取客户端提交的信息，转交给服务器端的CGI程序进行处理，最后返回结果给客户端。
组成CGI通信系统的是两部分：一部分是html页面，就是在用户端浏览器上显示的页面。另一部分则是运行在服务器上的Cgi程序。
服务器和客户端之间的通信，是客户端的浏览器和服务器端的http服务器之间的HTTP通信，我们只需要知道浏览器请求执行服务器上哪个CGI程序就可以了
服务器和CGI程序之间的通讯才是我们关注的
1.    服务器将URL指向一个应用程序
2.    服务器为应用程序执行做准备
3.    应用程序执行，读取标准输入和有关环境变量
4.    应用程序进行标准输出

客户端浏览器--------------服务器----------------CGI------------------数据库

客户端请求消息
客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成
请求报文的一般格式:
（1）请求行
请求行由请求方法字段、URL字段和HTTP协议版本字段3个字段组成，它们用空格分隔。例如:
GET /index.html
HTTP/1.1
HTTP协议的请求方法有GET查、POST改、HEAD、PUT增、DELETE删、OPTIONS、TRACE、CONNECT 8种
GET方法要求服务器将URL定位的资源放在响应报文的数据部分，回送给客户端。
使用GET方法时，请求参数和对应的值附加在URL后面，利用一个问号（“?”）代表URL的结尾与请求参数的开始，传递参数长度受限制，post没有限制。
http://www.test.com/cgi-bin/hello.py?key1=value1&key2=value2
POST：当客户端给服务器提供信息较多时可以使用POST方法。POST方法将请求参数封装在HTTP请求数据中，以名称/值的形式出现

（2）请求头部:
由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔。请求头部通知服务器有关于客户端请求的信息
典型的请求头有：
User-Agent：产生请求的浏览器类型。
Accept：客户端可识别的内容类型列表。
Host：请求的主机名，允许多个域名同处一个IP地址，即虚拟主机。
头域：一类头的集合
Cache
Client
Cookie/Login

（3）空行
最后一个请求头之后是一个空行，发送回车符和换行符，通知服务器以下不再有请求头。

（4）请求数据
请求数据不在GET方法中使用，而是在POST方法中使用。POST方法适用于需要客户填写表单的场合。与请求数据相关的最常使用的请求头是Content-Type和Content-Length。

服务器响应消息
HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。
(1)状态行：
HTTP-Version Status-Code Reason-Phrase CRLF:HTTP 1.1 200 OK
常见状态代码、状态描述的说明如下
200 OK：客户端请求成功。
400 Bad Request：客户端请求有语法错误，不能被服务器所理解。
401 Unauthorized：请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用。
403 Forbidden：服务器收到请求，但是拒绝提供服务。
404 Not Found：请求资源不存在，举个例子：输入了错误的URL。
500 Internal Server Error：服务器发生不可预期的错误。
503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常
(2)响应头部
和请求头/头域基本类似
date:xxxx
server：xxx
Content-Type:xxx
Content-Length:xxx等
(4)响应正文：HTML文件

GET和POST的区别
1. GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&相连，如EditPosts.aspx?name=test1&id=123456.  POST方法是把提交的数据放在HTTP包的Body中.
2. GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.
3. GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。
4. GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.



建设自己的网站（不是网页）：
从一个 ISP 租用服务器
通过域名注册公司来注册域名
网站主机的类型有：免费主机、虚拟（分享的）主机或独享主机。
一些服务提供商会提供免费的网站主机。
免费主机适合小型的低流量站点，比如个人网站。但是不推荐高流量或商业网站使用免费的主机
通常，您无法在免费主机上使用自己的域名。而不得不使用由主机提供的地址类似这样：http://www.freesite/users/~yoursite.htm
使用虚拟主机的话，您的网站与其余的也许是 100 个网站会被寄存在同一个高性能的服务器上。在一个虚拟主机上，每一个网站都可以使用属于自己的域名。
专享主机是最昂贵的主机类型。


URL用于描述网络上的资源：
http://www.mywebsite.com/sj/test/test.aspx?name=sviergn&x=true#stuff
schema://host[:port#]/path/.../[?query-string][#anchor]
Schema:                 http
host:                   www.mywebsite.com
path:                   /sj/test/test.aspx
Query String:           name=sviergn&x=true
Anchor:                 stuff
